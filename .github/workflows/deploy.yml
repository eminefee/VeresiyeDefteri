name: Build and Deploy to VPS

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Kodları çek
      uses: actions/checkout@v3

    - name: SSH anahtarını ayarla
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    - name: VPS bağlantısını test et
      run: |
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo 'SSH bağlantısı başarılı'"

    - name: Hedef klasörü oluştur
      run: |
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p /root/app"

    - name: Dosyaları VPS'e kopyala
      run: |
        rsync -avz --delete -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no" ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/root/app/

    - name: VPS üzerinde Docker işlemleri
      run: |
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
        set -e
        docker stop business-container || true
        docker rm business-container || true
        docker rmi business-app || true
        docker build -t business-app -f /root/app/Business/Dockerfile /root/app/Business
        docker run -d -p 80:80 --name business-container --restart unless-stopped business-app
        EOF


